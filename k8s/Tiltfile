print('Hello Tiltfile')

allow_k8s_contexts('k3d-k3s-default')
default_registry('k3d-myregistry.localhost:5000')

k8s_yaml(['spire-server/spire-namespace.yaml',
    'spire-server/server-account.yaml',
    'spire-server/server-cluster-role.yaml',
    'spire-server/server-configmap.yaml',
    'spire-server/server-service.yaml',
    'spire-server/server-statefulset.yaml',
    'spire-server/spire-bundle-configmap.yaml'])

k8s_yaml([
    'spire-agent/agent-account.yaml',
    'spire-agent/agent-cluster-role.yaml',
    'spire-agent/agent-configmap.yaml',
    'spire-agent/agent-daemonset.yaml'
])

# custom_build(
#   'java-kafka-ssl-factory',
#   'scripts/build_docker.sh $EXPECTED_REF',
#   ['./java-kafka-ssl-factory'],
#   skips_local_docker=True,disable_push=True
# )
# k8s_yaml(['app/client-deployment.yaml'])

# Kafka installation
custom_build(
  'custom-cp-enterprise-kafka',
  'custom-cp-enterprise-kafka/build_docker.sh $EXPECTED_REF',
  ['./custom-cp-enterprise-kafka'],
  skips_local_docker=True,disable_push=True
)

templated_yaml = local('./scripts/kustomize_kafka.sh')
k8s_yaml(templated_yaml)
watch_file('cp-helm-charts-k3d')

load('ext://configmap', 'configmap_yaml')
k8s_yaml('kafka-consumer-app/yaml/ns.yaml')

k8s_yaml(configmap_yaml('app-policy', namespace='kafkaconsumer', from_file=['./kafka-consumer-app/policies/allow_all.rego']))
k8s_yaml(configmap_yaml('proxy-config', namespace='kafkaconsumer', from_file=['./kafka-consumer-app/config/envoy.yaml']))
k8s_yaml(['kafka-consumer-app/yaml/deployment.yaml','kafka-consumer-app/yaml/service.yaml'])
k8s_resource('example-app', port_forwards='8080:8000')
watch_file('kafka-consumer-app/config')

local_resource('attestation', cmd='scripts/attestation.sh')
local_resource('integration tests', cmd='scripts/2_run_test.sh')

