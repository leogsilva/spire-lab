---
apiVersion: v1
kind: Service
metadata:
  name: zoo1
  labels:
    app: zookeeper-1
  namespace: local-kafka
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
    - name: follower
      port: 2888
      protocol: TCP
    - name: leader
      port: 3888
      protocol: TCP
  selector:
    app: zookeeper-1
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    name: kafka
  namespace: local-kafka
spec:
  ports:
    - port: 9092
      name: kafka-port
      protocol: TCP
    - port: 9093
      name: kafka-ssl
      protocol: TCP      
  selector:
    app: kafka
    id: "0"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zookeeper-deployment-1
  namespace: local-kafka
spec:
  selector:
    matchLabels:
      app: zookeeper-1
  template:
    metadata:
      labels:
        app: zookeeper-1
    spec:
      containers:
        - name: zoo1
          image: digitalwonderland/zookeeper
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_ID
              value: "1"
            - name: ZOOKEEPER_SERVER_1
              value: zoo1
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-broker0
  namespace: local-kafka
spec:
  selector:
    matchLabels:
      app: kafka
      id: "0"
  template:
    metadata:
      labels:
        app: kafka
        id: "0"
    spec:
      containers:
        - name: kafka
          image: bare-kafka
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            # - name: KAFKA_ADVERTISED_PORT
            #   value: "9092"
            # - name: KAFKA_ADVERTISED_HOST_NAME
            #   value: kafka-service
            - name: KAFKA_ADVERTISED_LISTENERS
              value: SSL://kafka-service.local-kafka.svc.cluster.local:9093,PLAINTEXT://kafka-service.local-kafka.svc.cluster.local:9092
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zoo1:2181
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_CREATE_TOPICS
              value: sample.topic:1:1
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://:9092, SSL://:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,SSL:SSL
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:/run/spire/sockets/agent.sock
            - name: KAFKA_SSL_CLIENT_AUTH
              value: "required"
            - name: KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
              value: ""
            - name: KAFKA_JMX_OPTS
              value: "-Djavax.net.debug=ssl:handshake:verbose:keymanager:trustmanager -Djava.security.debug=access:stack"
          volumeMounts:
          - name: spire-agent-socket
            mountPath: /run/spire/sockets
            readOnly: true                 
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: Directory              
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-cat
  namespace: local-kafka
spec:
  selector:
    matchLabels:
      app: kafka-cat
  template:
    metadata:
      labels:
        app: kafka-cat
    spec:
      containers:
        - name: kafka-cat
          image: confluentinc/cp-kafkacat
          command: ["/bin/sh"]
          args: ["-c", "trap : TERM INT; sleep infinity & wait"]
